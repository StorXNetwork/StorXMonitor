# Docker Compose file for StorX Monitoring Stack

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: storx-prometheus
    network_mode: host
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: storx-grafana
    network_mode: host
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=storx123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: unless-stopped
    depends_on:
      - prometheus

  storx-exporter:
    image: alpine:latest
    container_name: storx-exporter
    network_mode: host
    working_dir: /app
    environment:
      - STORX_HOST_ADDRESS=127.0.0.1
      - STORX_SATELLITE_PORT=10009
      - STORX_EXPORTER_PORT=9651
      - STORX_API_TIMEOUT=90
      - STORX_DISCOVERY_METHOD=file
      - STORX_NODES_FILE=/etc/storx/nodes.txt
    volumes:
      - ./storx_exporter/storx_exporter:/app/storx_exporter:ro
      - ./storx_exporter/nodes.txt:/etc/storx/nodes.txt:ro
    command: ./storx_exporter
    restart: unless-stopped
    depends_on:
      - prometheus


volumes:
  prometheus_data:
  grafana_data:

networks:
  storx-monitoring:
    driver: bridge
